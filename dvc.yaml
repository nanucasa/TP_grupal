stages:
  data_prep:
    cmd: python src\data_prep.py --input data\raw\telco_churn.csv --outdir 
      data\processed --seed 42 --test-size 0.2 --val-size 0.1
    deps:
    - data\raw\telco_churn.csv
    - src\data_prep.py
    outs:
    - data\processed
  train:
    cmd: python src\train.py --train data\processed\train.csv --valid 
      data\processed\valid.csv --out-model models\model.joblib --metrics 
      metrics.json --best-params artifacts\best_params.json --params params.yaml
    deps:
    - artifacts\best_params.json
    - data\processed\train.csv
    - data\processed\valid.csv
    - src\train.py
    outs:
    - models\model.joblib
    metrics:
    - metrics.json:
        cache: false
    params:
    - train.C
    - train.max_iter
    - train.seed
  evaluate_test:
    cmd: python src\evaluate.py --test data\processed\test.csv --model 
      models\model.joblib --metrics-out metrics_test.json
    deps:
    - data\processed\test.csv
    - models\model.joblib
    - src\evaluate.py
    metrics:
    - metrics_test.json:
        cache: false
  tune:
    cmd: python src\tune.py --train data\processed\train.csv --valid 
      data\processed\valid.csv --params params.yaml --best-out 
      artifacts\best_params.json --metrics-out metrics_tune.json
    deps:
    - data\processed\train.csv
    - data\processed\valid.csv
    - params.yaml
    - src\tune.py
    outs:
    - artifacts\best_params.json
    metrics:
    - metrics_tune.json:
        cache: false
